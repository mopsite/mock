import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.Bb1Gubb8.js";const r=JSON.parse('{"title":"Mock.setup()","description":"","frontmatter":{},"headers":[],"relativePath":"api/setup.md","filePath":"api/setup.md"}'),n={name:"api/setup.md"};function p(l,s,h,o,d,k){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="mock-setup" tabindex="-1">Mock.setup() <a class="header-anchor" href="#mock-setup" aria-label="Permalink to &quot;Mock.setup()&quot;">​</a></h1><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Mock.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(settings)</span></span></code></pre></div><h2 id="详情" tabindex="-1">详情 <a class="header-anchor" href="#详情" aria-label="Permalink to &quot;详情&quot;">​</a></h2><p>配置拦截 Ajax 请求时的行为。支持的配置项有：<code>timeout</code>。</p><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><ul><li><p>settings</p><p>必选。</p><p>配置项集合。</p><ul><li><p>timeout</p><p>可选。</p><p>指定被拦截的 Ajax 请求的响应时间，单位是毫秒。值可以是正整数，例如 <code>400</code>，表示 400 毫秒后才会返回响应内容；也可以是横杠 <code>-</code> 风格的字符串，例如 <code>&#39;200-600&#39;</code>，表示响应时间介于 200 到 600 毫秒之间。默认值是 <code>&#39;10-100&#39;</code>。</p></li></ul></li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Mock.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  timeout: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Mock.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  timeout: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;200-600&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,9)]))}const u=a(n,[["render",p]]);export{r as __pageData,u as default};
